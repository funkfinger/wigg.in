I"Î!<p>Here are the steps I went through to get a new / fresh blog up using Jekyll and deployed to Amazon S3 using Forestry.io with CloudFront and SSL.</p>

<h2 id="creating-the-jekyll-site">Creating the Jekyll site</h2>

<p>Itâ€™s probably best to follow the <a href="https://jekyllrb.com/docs/quickstart/">Jekyll quick start quide</a>, but hereâ€™s basically what I went throughâ€¦</p>

<ul>
  <li>Create a GitHub repo (or something similar)</li>
  <li>
    <p>Clone the new repo to your local machine and create the new Jekyll site framework. You should follow the above quick start guide, but these are the things I did on my OS X machine (that is already well setup for software development)â€¦</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/&lt;GITHUB USER&gt;/&lt;GITHUB REPO NAME&gt;.git
cd &lt;GITHUB REPO NAME&gt;
rvm use 2.5.1
gem install jekyll bundler
jekyll new . --force
bundle install
jekyll serve
</code></pre></div>    </div>
  </li>
  <li>A new Jekyll site should now be available on <a href="http://localhost.com:4000">http://localhost.com:4000</a></li>
  <li>
    <p>do the following to push the fresh Jekyll site to GitHub</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git commit -am 'adding in the jekyll site'
git push
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="where-the-files-will-live">Where the files will live</h2>

<p>The site files will live in an <strong>Amazon Simple Storage Service</strong> bucket. This bucket will then be attached to <strong>Amazon CloudFront</strong> so that it can support SSL (as well as have global content distribution).</p>

<ol>
  <li>Create a S3 bucket:
    <ul>
      <li>use the bucket name <code class="highlighter-rouge">static.YOUR-DOMAIN.com</code> - this will be where the non-CloudFront-ed content will live.</li>
    </ul>
  </li>
  <li>Setup <strong>Static Web Hosting</strong> on the new bucket
    <ul>
      <li><code class="highlighter-rouge">index.html</code> as index document</li>
      <li><code class="highlighter-rouge">error.html</code> as error document</li>
    </ul>
  </li>
  <li>
    <p>Set the bucket permissions under <code class="highlighter-rouge">Permssions &gt; Bucket Polciy</code> add this:</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "PublicReadGetObject",
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::static.YOUR-DOMAIN.com/*"
        }
    ]
}
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="create-an-iam-user-for-s3-access">Create an IAM user for S3 access</h2>

<ul>
  <li>In the AWS management console, go to IAM and add a user.</li>
  <li>Name the user and give the user <code class="highlighter-rouge">Progmatic Acces</code></li>
  <li>Use the <code class="highlighter-rouge">Attach existing policies</code> link and add <code class="highlighter-rouge">AmazonS3FullAccess</code></li>
  <li>Save the <code class="highlighter-rouge">CSV</code> file that this will generate somewhere safe. The values will be needed in the deployment phase.</li>
</ul>

<h2 id="setting-up-the-domain">Setting up the domain</h2>

<p>In <strong>Route 53</strong> click <code class="highlighter-rouge">Create Record Set</code> and create an <code class="highlighter-rouge">A - IPv4 address</code> with a name of <code class="highlighter-rouge">static</code> and that is an <strong>alias</strong> to the <code class="highlighter-rouge">static.YOUR-DOMAIN.com</code> S3 bucket.</p>

<h2 id="easy-using-forestryio-to-deploy"><strong>EASY:</strong> Using forestry.io to deploy</h2>

<p>An easy way to now deploy the site is using <a href="forestry.io">forestry.io</a> which is a tool to edit Jekyll (and Hugo) sites online. Behind the scenes you are just editing and commiting the post files to GitHub.</p>

<ol>
  <li>Import the GitHub repo to forestry.io</li>
  <li>Under the <code class="highlighter-rouge">Settings</code> side menu, click on <code class="highlighter-rouge">Deployment</code> and select <code class="highlighter-rouge">Amazon S3</code> filling in the correct bucket name (<code class="highlighter-rouge">static.YOUR-DOMAIN.com</code>) and the <code class="highlighter-rouge">Access Key</code> and <code class="highlighter-rouge">Secret</code> from the <code class="highlighter-rouge">IAM</code> <code class="highlighter-rouge">CSV</code></li>
  <li>If all goes swimmingly, you should be able to make an edit using the forestry.io online editor and the site should get deployed to your S3 bucket. Which should be available at the domain name <a href="http://static.YOUR-DOMAIN.com">http://static.YOUR-DOMAIN.com</a></li>
</ol>

<h2 id="create-a-ssl-certificate">Create a SSL certificate</h2>

<p>In <strong>Amazon Certificate Manager</strong> create an SSL certificate for your domains</p>

<ul>
  <li>Select <strong>Request a public certificate</strong></li>
  <li>Add your domain names:
    <ul>
      <li><code class="highlighter-rouge">YOUR-DOMAIN.com</code> and</li>
      <li><code class="highlighter-rouge">www.YOUR-DOMAIN.com</code></li>
    </ul>
  </li>
  <li>Set <code class="highlighter-rouge">Default Root Object</code> to <code class="highlighter-rouge">index.html</code></li>
  <li>DNS validating is easy if you use <strong>Route53</strong> for DNS - Amazon will make the the changes to <strong>Route53</strong> for you</li>
</ul>

<p>This will take some time, so wait until it completes before moving on to the <strong>CloudFront</strong> step.</p>

<h2 id="setup-cloudfront">Setup CloudFront</h2>

<p>Once the SSL certificate is issued you can create a new <strong>Amazon CloudFront</strong> distribution.</p>

<!-- * For `Origin Domain Name` select the `static.YOUR-DOMAIN.com` address -->

<ul>
  <li>Select <strong>Web</strong></li>
  <li>use the static address of the S3 bucket for the <code class="highlighter-rouge">Prigin Domain Name</code> - IE <code class="highlighter-rouge">http://static.YOUR-DOMAIN.com.s3-website-us-east-1.amazonaws.com</code> as seen in this StackOverflow answer: <a href="https://stackoverflow.com/a/33087418/2642232">https://stackoverflow.com/a/33087418/2642232</a> <sup><a href="#note">NOTE</a></sup></li>
  <li>I selected <code class="highlighter-rouge">Redirect HTTP to HTTPS</code></li>
  <li>Add your <code class="highlighter-rouge">Alternate Domain Names (CNAMES)</code> which should be:
    <ul>
      <li><code class="highlighter-rouge">YOUR-DOMAIN.com</code></li>
      <li><code class="highlighter-rouge">www.YOUR-DOMAIN.com</code></li>
    </ul>
  </li>
  <li>Select <code class="highlighter-rouge">Custom SSL Certificate</code> and select your certificate from the dropdown menu</li>
</ul>

<p>This should be all the settings you need to set. Click <code class="highlighter-rouge">Create Distribution</code> and wait until it deploys. This will also take some time.</p>

<p>Once deployed to <strong>CloudFront</strong>, you should be able to get the <strong>CloudFront</strong> <code class="highlighter-rouge">Domain Name</code> from your <code class="highlighter-rouge">Distributions</code> which will look something like <code class="highlighter-rouge">xhja1sdfs7df.cloudfront.net</code>. Copy this address for the next step</p>

<p><a name="note">NOTE</a>: Entering the static website value here should allow <code class="highlighter-rouge">permalink: pretty</code> in your config - so that you donâ€™t need <code class="highlighter-rouge">index.html</code> at the end of linksâ€¦</p>

<h2 id="update-your-dns">Update your DNS</h2>

<p>In <strong>Route53</strong></p>

<ul>
  <li>add a <code class="highlighter-rouge">CNAME</code> record for the <code class="highlighter-rouge">www.YOUR-DOMAIN.com</code> entry with the CloudFront value from above (i.e. <code class="highlighter-rouge">xhja1sdfs7df.cloudfront.net</code>)</li>
  <li>add an <code class="highlighter-rouge">A - IPv4 address</code> record with the alias of the <strong>CloudFront</strong> dropdown value.</li>
</ul>

<h2 id="next-steps">Next Steps</h2>

<p>The deployment currently is getting handled by <a href="http://forestry.io/">forestry.io</a> which is all well and good, but better would be a deployment on check-in to <a href="https://github.com/">GitHub</a> - Forestry may be actually doing this, but a tool more focused on deployment such as <a href="https://codeship.com/">CodeShip</a> seems like a better idea. I may pursue this in the near (or distant) future.</p>
:ET